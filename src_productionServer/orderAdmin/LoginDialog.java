/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package orderAdmin;

import adminPackets.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;


/**
 *
 * @author mike
 */
public class LoginDialog extends javax.swing.JDialog implements ActionListener{
    private Admin parent;
    /**
     * Creates new form LoginDialog
     */
    public LoginDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocationByPlatform(true);
        this.parent = (Admin)parent;
        this.connectButton.addActionListener(this);
        this.cancelButton.addActionListener(this);
    }
    
    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource().equals(connectButton)) {
            try {
                parent.socket = new Socket(this.serverIpTf.getText(), parent.serverPort);
                parent.dis = new DataInputStream(parent.socket.getInputStream());
                parent.dos = new DataOutputStream(parent.socket.getOutputStream());
                LoginRequest request = new LoginRequest(this.loginTf.getText(), this.passwordTf.getText());
                parent.dos.write(request.networkString().getBytes());
                boolean endingEncountered = false;
                boolean halfEndingEncountered = false;

                if (parent.socket.isConnected()) {
                    StringBuffer receiveMsg = new StringBuffer();
                    while (!endingEncountered) {
                        byte b = parent.dis.readByte();
                        if (b == (byte) '\r') {
                            halfEndingEncountered = true;
                        } else if (halfEndingEncountered && (b == (byte) '\n')) {
                            endingEncountered = true;
                        } else {
                            receiveMsg.append((char) b);
                            halfEndingEncountered = false;
                        }
                    }
                    String data = receiveMsg.toString().trim();
                    String vectStr[] = data.split("#");

                    if (vectStr[0].equals("logina")) {
                        LoginResponse resp = new LoginResponse(data);
                        if (resp.ack == true) {
                            parent.adminIsLogged = true;
                            parent.stateLabel.setText("Running");
                            this.dispose();
                        } else {
                            JOptionPane.showMessageDialog(parent, resp.cause);
                            parent.dos.close();
                            this.dispose();
                        }
                    } else {
                        System.err.println("Connect error: Received unexpected packet");
                        parent.dos.close();
                        this.dispose();
                    }
                }
            } catch (UnknownHostException ex) {
                Logger.getLogger(LoginDialog.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(LoginDialog.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        if (e.getSource().equals(cancelButton)) {
            this.dispose();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        serverIpTf = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cancelButton = new javax.swing.JButton();
        loginTf = new javax.swing.JTextField();
        connectButton = new javax.swing.JButton();
        passwordTf = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Server IP:");

        jLabel2.setText("Login:");

        jLabel3.setText("Password:");

        cancelButton.setText("Cancel");

        connectButton.setText("Connect");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(serverIpTf)
                            .addComponent(loginTf)
                            .addComponent(passwordTf, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 108, Short.MAX_VALUE)
                        .addComponent(connectButton)
                        .addGap(18, 18, 18)
                        .addComponent(cancelButton)
                        .addGap(18, 18, 18))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(serverIpTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(loginTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(passwordTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(connectButton))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton connectButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField loginTf;
    private javax.swing.JPasswordField passwordTf;
    private javax.swing.JTextField serverIpTf;
    // End of variables declaration//GEN-END:variables

    
}
